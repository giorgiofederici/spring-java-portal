#Default Header
sjp.default.header.title = Spring Java Portal
sjp.default.header.subtitle = Creato da Giorgio Federici
sjp.default.header.italian = Italiano
sjp.default.header.english = Inglese
sjp.default.header.nav.top.home = Home
sjp.default.header.nav.top.signup = Registrati
sjp.default.header.nav.top.signin = Accedi

#Default Main Navigation
default.nav.main.home = Home
default.nav.main.showcases = Showcase
default.nav.main.showcases.all = Tutti gli Showcase
default.nav.main.showcases.onlineCartSystem = Carrello Online
default.nav.main.showcases.dataScience = Data Science
default.nav.main.technologies = Tecnologie
default.nav.main.architecture = Architettura
default.nav.main.about = About

#Index
sjp.index.section.one.title = Benvenuto nello Spring Java Portal
sjp.index.section.one.description = Lo Spring Java Portal è un'applicazione web creata per riunire e mostrare gran parte di quello che so riguardo al mondo Java. Tecnologie Java in evidenza sono:
sjp.index.section.one.list.first = Java SE
sjp.index.section.one.list.second = J2EE
sjp.index.section.one.list.third = Spring MVC Framework
sjp.index.section.one.list.fourth = Spring Security
sjp.index.section.one.list.fifth = Spring Social
sjp.index.section.one.list.sixth = Hibernate
sjp.index.section.one.list.seventh = Charts
sjp.index.section.one.list.eighth = Reports
sjp.index.section.two.title = Tutto su Java?
sjp.index.section.two.description = Lo scopo dello Spring Java Portal è anche di mostrare un approccio moderno alla sviluppo di applicazioni web, perciò ci sono molte altre tecnologie usate:
sjp.index.section.two.list.first = HTML5/CSS3
sjp.index.section.two.list.second = Bootstrap
sjp.index.section.two.list.third = Javascript
sjp.index.section.two.list.fourth = jQuery
sjp.index.section.two.list.fifth = MySQL
sjp.index.section.two.list.sixth = Amazon Web Service
sjp.index.section.three.title = Codice Sorgente
sjp.index.section.three.description = Lo Spring Java Portal è un progetto in continua evoluzione. E' possibile tenere traccia delle diverse versioni e controllarne il codice attraverso il mio repository Github
sjp.index.section.three.github.link = Github Spring Java Portal

#Showcases
sjp.showcases.section.one.title = Showcase
sjp.showcases.section.one.description = Seleziona lo showcase che stai cercando!

#Showcases Online Cart System
sjp.showcases.ocs.title = Carrello Online
sjp.showcases.ocs.description = Online Cart è lo showcase di un gestionale riguardante il workflow di un e-commerce. Questo prototipo segue un processo che inizia dalla visualizzazione del catalogo fino al rilascio della ricevuta di acquisto.
sjp.showcases.ocs.activity = Activiti BPMN 2.0
sjp.showcases.ocs.activity.description = Carrello Online implementato con Activiti BPMN 2.0
sjp.showcases.ocs.springWebFlow = Spring Web Flow
sjp.showcases.ocs.springWebFlow.description = Carrello Online implementato con Spring Web Flow
sjp.showcases.ocs.apachePluto = Apache Pluto
sjp.showcases.ocs.apachePluto.description = Carrello Online implementato con Apache Pluto

#Showcases OCS WebFlow Customer Info
sjp.showcases.ocs.webflow.title = Dettagli Cliente
sjp.showcases.ocs.webflow.form.name = Nome
sjp.showcases.ocs.webflow.form.doorNumber = Civico
sjp.showcases.ocs.webflow.form.streetName = Nome della Via
sjp.showcases.ocs.webflow.form.areaName = Nome Area
sjp.showcases.ocs.webflow.form.state = Stato/Provincia
sjp.showcases.ocs.webflow.form.country = Paese
sjp.showcases.ocs.webflow.form.zipCode = Codice Postale
sjp.showcases.ocs.webflow.form.phoneNumber = Telefono
sjp.showcases.ocs.webflow.form.submit = Aggiungi
sjp.showcases.ocs.webflow.form.cancel = Cancella

#Showcases OCS WebFlow Shipping Details
sjp.showcases.ocs.webflow.shipping.title = Dettagli Spedizione
sjp.showcases.ocs.webflow.shipping.form.name = Nome
sjp.showcases.ocs.webflow.shipping.form.shippingDate = Data di Spedizione
sjp.showcases.ocs.webflow.shipping.form.doorNumber = Civico
sjp.showcases.ocs.webflow.shipping.form.streetName = Nome della Via
sjp.showcases.ocs.webflow.shipping.form.areaName = Nome Area
sjp.showcases.ocs.webflow.shipping.form.state = Stato/Provincia
sjp.showcases.ocs.webflow.shipping.form.country = Paese
sjp.showcases.ocs.webflow.shipping.form.zipCode = Codice Postale
sjp.showcases.ocs.webflow.shipping.form.phoneNumber = Telefono
sjp.showcases.ocs.webflow.shipping.form.submit = Aggiungi
sjp.showcases.ocs.webflow.shipping.form.cancel = Cancella
sjp.showcases.ocs.webflow.shipping.form.back = Indietro

#Showcases OCS WebFlow Checkout Cancelled
sjp.showcases.ocs.webflow.checkout.cancelled.description = Ordine annullato!

#Showcases Data Science
sjp.showcases.data.science.title = Data Science
sjp.showcases.data.science.testClick = Premi per testare!
sjp.showcases.data.science.first.title = Ottenere tutti i nomi dei file presenti in directory gerarchiche usando Java
sjp.showcases.data.science.first.description = Il primo showcase della sezione data science, illustra come ottenere percorsi e nomi da una directory con una struttura complessa, contenente molte directory e file.
sjp.showcases.data.science.second.title = Ottenere tutti i nomi dei file presenti in directory gerarchiche usando Apache Commons IO
sjp.showcases.data.science.second.description = Elencare tutti i nomi dei file presenti in directory gerarchiche può essere fatto ricorsivamente come mostrato nel precedente esempio. Esiste anche un modo più facile e con meno codice, usando la libreria Apache Commons IO.
sjp.showcases.data.science.third.title = Leggere il contenuto di file testuali tutto in una volta, usando Java 8
sjp.showcases.data.science.third.description = Esistono molti modi per leggere il contenuto di file testuali, ognuno con i suoi pro e contro: alcune metodologie consumano tempo e memoria, mentre altri sono veloci e non richiedono molte risorse di calcolo; alcuni leggono tutto il contenuto in una volta, altri linea per linea. Questo esempio dimostra come leggere il contenuto di file testuali tutto in una volta usando Java 8.
sjp.showcases.data.science.fourth.title = Leggere il contenuto di file testuali tutto in una volta, usando Java Apache Commons IO
sjp.showcases.data.science.fourth.description = La stessa funzionalità descritta nel precedente esempio può essere raggiunta usando le API Apache Commons IO.
sjp.showcases.data.science.fifth.title = Estrarre il testo da un PDF usando Apache Tika
sjp.showcases.data.science.fifth.description = Uno dei più difficili tipi di file da cui estrarre e formattare data è il PDF. Alcuni PDF sono impossibili da analizzare perché protetti da password, mentre altri contengono testo scannerizzato e immagini. Questo esempio mostra come estrarre il testo da file PDF usando Apache Tika, dato un PDF non cifrato o protetto da password e contenente testo non scannerizzato.
sjp.showcases.data.science.sixth.title = Pulizia di file di testo ASCII usando le Espressioni Regolari
sjp.showcases.data.science.sixth.description = File di testo ASCII possono contenere caratteri non necessari, spesso introdotti durante un processo di conversione, come conversione da PDF a testo oppure da HTML a testo. Questi caratteri sono spesso visti come del "rumore" perché impediscono il processamento dati. Questo esempio rimuove numerosi rumori da testi ASCII usando le Espressioni Regolari.
sjp.showcases.data.science.seventh.title = Parsing di file Comma Separated Value (CSV) usando Univocity 
sjp.showcases.data.science.seventh.description = Un'altra tipologia di file che i data scientist maneggiano è quella dei Comma Separated Value (CSV), dove i dati sono separati da virgole. I file CSV sono molto popolari perché possono essere letti dalla maggior parte delle applicazioni spreadsheet, come MS Excel. In questo esempio, vedremo come lavorare con file CSV e gestire i dati ottenuti da essi.
sjp.showcases.data.science.eighth.title = Parsing di file Tab Separated Value (TSV) usando Univocity 
sjp.showcases.data.science.eighth.description = A differenza dei file CSV, i file Tab Separated Value (TSV) contengono dati che sono separati da delimitatori di tipo tab. Questo esempio mostra come leggere dati dai file TSV.
sjp.showcases.data.science.nineth.title = Parsing file XML usando JDOM
sjp.showcases.data.science.nineth.description = A differenza di dati sottoforma di testo, i quali sono spesso non strutturati, l'organizzazione di dati in file XML è un metodo popolare per preparare, trasmettere, ed analizzare dati in maniera strutturata. Esistono numerosi metodi per lavorare con il contenuto di file XML. In this esempio, ci limiteremo ad usare una libreria Java esterna chiamata JDOM.
sjp.showcases.data.science.tenth.title = Scrittura di file JSON usando JSON.simple
sjp.showcases.data.science.tenth.description = JSON è un formato di scambio dati leggibile per gli umani e leggero. Il suo significato è JavaScript Object Notation. Sta diventando sempre più un popolare formato generato dalle moderne applicazioni web. In questo esempio, vedremo come scrivere file JSON.
sjp.showcases.data.science.eleventh.title = Lettura di file JSON usando JSON.simple
sjp.showcases.data.science.eleventh.description = In questo esempio, vedremo come leggere o analizzare un file JSON.
sjp.showcases.data.science.twelveth.title = Estrarre dati web da una URL usando JSoup
sjp.showcases.data.science.twelveth.description = Oggigiorno, una grande quantità di dati può essere trovata sul Web. Questo tipo di dati può essere strutturato, semi-strutturato oppure non strutturato affatto. Perciò, sono necessarie molte tecniche differenti per estrarli. Una delle più semplici metodologie è di usare una librerie esterna Java chiamata JSoup. Questo esempio utilizza alcuni metodi offerti da JSoup per estrarre dati web.
sjp.showcases.data.science.thirteenth.title = Estrarre dati web da un sito web usando Selenium Webdriver
sjp.showcases.data.science.thirteenth.description = Selenium è un tool basato su Java che aiuta ad automatizzare il test del software e il controllo di qualità. Selenium può essere utilizzato per recuperare automaticamente ed utilizzare dati web.




#About
sjp.about.section.one.title = About
sjp.about.section.one.description = I graduated from Sapienza, University of Rome with a Bachelor and Master's degree. I am passionate about technology and have been since my childhood - I used to spend most of my time playing videogames. With my degree I turned this passion into a profession: computers and IT assist me to share my creative and innovative ideas, while engineering studies help me to think outside the box. I am never satisfied about what I know and I always try to learn new things. I think this is the only way to broaden my career path following what I like and improving what I do. So far, I am a developer but I would like to use my engineering knowledge more, in order to create new software architectures and standards. After my graduation, I have worked in Sogetel S.r.l. (Rome, Italy) for 1 year as a Java programmer and web application developer. I have had to deal with many of the various problems and difficult situations that can arise during development and release process - lack of time, change of requirements, internal problems with technologies. Then, to improve my English level, I have studied at Atlantic Language School (www.atlanticlanguage.com) in Galway, Ireland. In June 2014, I went back to Italy and started to work for Engineering Group S.p.a., a leading IT company in Italy, as a Junior Solution Developer, SpagoBI Team (R&D department – Turin, Italy). After almost two years, I left Engineering Group S.p.a and Italy. Now I am living in Galway, Ireland. Here, I have worked for SAP Ireland, as a Software Developer in the Cloud Service Centre Team.

#Architecture
sjp.architecture.section.one.title = Architettura Generale
sjp.architecture.section.one.description = L'architettura dello Spring Java Portal è organizzata da diversi livelli funzionali. L'immagine che segue mostra uno schema dell'architettura generale di questa applicazione web.


#Technologies
sjp.techs.title = Tecnologie
sjp.techs.db = Database
sjp.techs.hibernate = Hibernate
sjp.techs.javaSE = Java SE

#Sign Up
sjp.signup.title = Registrazione
sjp.signup.form.username = Username
sjp.signup.form.email = E-Mail
sjp.signup.form.password = Password
sjp.signup.form.confirmPassword = Conferma Password
sjp.signup.form.submit = Sign Up

#Sign Up Success
sjp.signup.success.description = Registrazione effettuata con successo!

#Sign Up Form Validation
sjp.signup.form.username.notNull = Il campo Username non può essere vuoto
sjp.signup.form.username.notEmpty = Il campo Username non può essere vuoto
sjp.signup.form.username.length = Il campo Username può contenere massimo 50 caratteri
sjp.signup.form.email.notNull = Il campo E-Mail non può essere vuoto
sjp.signup.form.email.notEmpty = Il campo E-Mail non può essere vuoto
sjp.signup.form.email.email = Il campo E-Mail deve essere un indirizzo email valido
sjp.signup.form.email.length = Il campo E-Mail può contenere massimo 50 caratteri
sjp.signup.form.password.notNull = Il campo Password non può essere vuoto
sjp.signup.form.password.notEmpty = Il campo Password non può essere vuoto
sjp.signup.form.password.length = Il campo Password può contenere massimo 50 caratteri


#Sign In
sjp.signin.title = Accedi
sjp.signin.form.username = Username
sjp.signin.form.password = Password
sjp.signin.form.submit = Login

#Sign In Form Validation
#Sign In Form Validation
sjp.signin.validation.user.disabled = Username disabilitato
sjp.signin.validation.user.invalid = Username e Password invalide


#User Header
sjp.user.header.nav.top.userProfile = Profile Utente
sjp.user.header.nav.top.logout = Logout

#User Main Navigation
sjp.user.nav.main.ocs = Carrello Online
sjp.user.nav.main.social = Social
sjp.user.nav.main.twitter = Twitter

#User Index
sjp.user.index.profile.username = Username:
sjp.user.index.profile.email = E-Mail:
sjp.user.index.upload = Upload

#User Twitter Connect
sjp.user.twitter.connect.title = Connessione Twitter
sjp.user.twitter.connect.description = Non sei ancora collegato con Twitter. Premere il bottone per connettere l'applicazione al tuo account Twitter.
sjp.user.twitter.connect.form.submit = Collegati a Twitter

#User Twitter Connected
sjp.user.twitter.connected.title = Sei collegato con Twitter!
sjp.user.twitter.connected.description = Sei collegato con il tuo account Twitter.
sjp.user.twitter.connected.accessProfile = Accedi al tuo profilo Twitter

#User Twitter Profile
sjp.user.twitter.profile.title = Twitter Profile
sjp.user.twitter.profile.tweets = Tweets
sjp.user.twitter.profile.followers = Followers
sjp.user.twitter.profile.following = Following
sjp.user.twitter.profile.search = Ricerca Twitter
sjp.user.twitter.profile.search.dashboard = Bacheca Ricerca
sjp.user.twitter.profile.search.tweets = Tweet
sjp.user.twitter.profile.search.retweets = Retweet
sjp.user.twitter.profile.search.users = Utenti

#User OCS
sjp.user.ocs.customer.account.title = Crea Account Cliente

#User OCS Customer Account
sjp.user.ocs.customer.account.form.username = Username
sjp.user.ocs.customer.account.form.firstName = Nome
sjp.user.ocs.customer.account.form.lastName = Cognome
sjp.user.ocs.customer.account.form.midName = Secondo Nome
sjp.user.ocs.customer.account.form.email = E-Mail
sjp.user.ocs.customer.account.form.mobile = Cellulare
sjp.user.ocs.customer.account.form.address = Indirizzo
sjp.user.ocs.customer.account.form.birthDate = Data di Nascita
sjp.user.ocs.customer.account.form.submit = Conferma

#Admin Main Navigation
sjp.admin.nav.main.usersManagement = Users Management
sjp.admin.nav.main.ocsManagement = OCS Management

#Admin Users Management
sjp.admin.users.management.table.username = Username
sjp.admin.users.management.table.email = E-Mail
sjp.admin.users.management.table.enabled = Abilitato
sjp.admin.users.management.table.actions = Azioni

#Admin Users Management Edit
sjp.admin.users.management.edit.title = Modifica Utente:
sjp.admin.users.management.edit.form.username = Username
sjp.admin.users.management.edit.form.email = E-Mail
sjp.admin.users.management.edit.form.enabled = Abilitato
sjp.admin.users.management.edit.form.submit = Conferma

#Admin Users Management Edit Validations
sjp.admin.users.management.edit.form.username.notNull = Il campo Username non può essere vuoto
sjp.admin.users.management.edit.form.username.notEmpty = Il campo Username non può essere vuoto
sjp.admin.users.management.edit.form.username.length = Il campo Username può contenere massimo 50 caratteri
sjp.admin.users.management.edit.form.email.notNull = Il campo E-Mail non può essere vuoto
sjp.admin.users.management.edit.form.email.notEmpty = Il campo E-Mail non può essere vuoto
sjp.admin.users.management.edit.form.email.length = Il campo E-Mail può contenere massimo 50 caratteri
sjp.admin.users.management.edit.form.email.email = Il campo E-Mail deve essere un indirizzo email valido

#Admin OCS Management
sjp.admin.ocs.management.customerAccounts.title = Account Cliente
sjp.admin.ocs.management.category.title = Categorie
sjp.admin.ocs.management.catalog.title = Catalog

#Admin OCS Categories Management
sjp.admin.ocs.categories.management.addCategory = Aggiungi Categoria
sjp.admin.ocs.categories.management.addCategory.name = Nome
sjp.admin.ocs.categories.management.addCategory.submit = Conferma
sjp.admin.ocs.categories.management.table.id = ID
sjp.admin.ocs.categories.management.table.name = Nome
sjp.admin.ocs.categories.management.table.actions = Azioni

#Admin OCS Categories Management Edit
sjp.admin.ocs.categories.management.editCategory = Modifica Categoria:
sjp.admin.ocs.categories.management.editCategory.name = Nome
sjp.admin.ocs.categories.management.editCategory.submit = Conferma

#Admin OCS Categories Management Validations
sjp.admin.ocs.categories.management.addCategory.name.notNull = Il campo Nome non può essere vuoto
sjp.admin.ocs.categories.management.addCategory.name.notEmpty = Il campo Nome non può essere vuoto
sjp.admin.ocs.categories.management.addCategory.name.length = Il campo Nome può contenere massimo 100 caratteri

#Admin OCS Customer Account Management
sjp.admin.ocs.customer.accounts.management.table.id = ID
sjp.admin.ocs.customer.accounts.management.table.username = Username
sjp.admin.ocs.customer.accounts.management.table.firstName = Nome
sjp.admin.ocs.customer.accounts.management.table.lastName = Cognome
sjp.admin.ocs.customer.accounts.management.table.email = E-Mail
sjp.admin.ocs.customer.accounts.management.table.actions = Azioni

#Admin OCS Products Management
sjp.admin.ocs.products.management.addProduct = Aggiungi Prodotto
sjp.admin.ocs.products.management.addProduct.name = Nome
sjp.admin.ocs.products.management.addProduct.category = Categoria
sjp.admin.ocs.products.management.addProduct.price = Prezzo
sjp.admin.ocs.products.management.addProduct.stock = Magazzino
sjp.admin.ocs.products.management.addProduct.submit = Conferma
sjp.admin.ocs.products.management.table.id = ID
sjp.admin.ocs.products.management.table.name = Nome
sjp.admin.ocs.products.management.table.category = Categoria
sjp.admin.ocs.products.management.table.price = Prezzo
sjp.admin.ocs.products.management.table.stock = Magazzino
sjp.admin.ocs.products.management.table.actions = Azioni

#############################################################


#Spring Java Portal Custom Validations
sjp.validation.passwordMatches = Le Password non corrispondono
sjp.validation.unique.username = Username già esistente


#Access Denied Page
sjp.access.denied.title = Accesso Negato
sjp.access.denied.description = Non sei autorizzato ad accedere alla risorsa selezionata

#Error Page
sjp.error.page.title = Errore
sjp.error.page.description = Si è verificato un errore durante l'esecuzione dell'applicazione. Si prega di contattare il supporto ...